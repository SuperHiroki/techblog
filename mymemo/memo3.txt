私はテックブログを管理できるウェブサイトを作りたいと思っている。
(1)
ページは下記のようにする。

どのページにもあるヘッダー（上部に五つのボタンがある）：
1. あなたのマイページ
2. 他のユーザのマイページ
3. おすすめ企業
4. おすすめ記事
5. おすすめ企業の最新の記事

マイページにあるヘッダー（上部に五つのボタンがある）：
1. 登録した企業
2. 登録した企業の最近の記事
3. いいね
4. ブックマーク
5. アーカイブ

おすすめ企業にあるヘッダー（上部に四つのボタンがある）：
1. 登録が多い企業
2. いいねが多い企業
3. ブックマークが多い企業
4. アーカイブが多い企業

おすすめ記事にあるヘッダー（上部に三つのボタンがある）：
1. いいねが多い記事
2. ブックマークが多い記事
3. アーカイブが多い記事

(2)
いいね、ブックマーク、アーカイブをつけることや、会社登録については、拡張機能を別に作って行うことにする。

(3)
DBの設計は下記である。userとauthorは多対多、userとarticleは多対多の関係である。authorとarticleは一対多の関係性である。
articleテーブルにレコードを追加する際には、そのレコードのlinkが、authorテーブルのいずれかのレコードのlinkの文字列から開始している必要がある。

・User テーブル
id: ユーザーのユニークな識別子（整数、自動インクリメント）
name: ユーザーの名前（文字列、ユニーク、NULL不可）
email: ユーザーのメールアドレス（文字列、ユニーク、NULL不可）
email_verified_at: メールアドレスが確認された日時（タイムスタンプ、NULL許容）
password: ユーザーのパスワード（ハッシュ化された文字列、NULL不可）
rememberToken: ログイン状態を保持するためのトークン
timestamps: レコードの作成日時と更新日時（created_at と updated_at）

・Author テーブル
id: 著者のユニークな識別子（整数、自動インクリメント）
name: 著者の名前（文字列、ユニーク、NULL不可）
link: 著者のリンク（文字列、ユニーク、NULL不可）
rss_link: 著者のRSSリンク（文字列、ユニーク、NULL許容）
timestamps: レコードの作成日時と更新日時

・Article テーブル
id: 記事のユニークな識別子（整数、自動インクリメント）
title: 記事のタイトル（文字列、NULL不可）
description: 記事の説明（文字列、NULL不可）
link: 記事のリンク（文字列、ユニーク、NULL不可）
good: いいね（ブール値、NULL不可）
bookmark: ブックマーク（ブール値、NULL不可）
archive: アーカイブ（ブール値、NULL不可）
published_date: 記事の公開日（日付、NULL不可）
updated_date: 記事の更新日（日付、NULL不可）
author_id: 著者のID（外部キー、Author テーブルを参照）
timestamps: レコードの作成日時と更新日時

・CommentToAuthor テーブル
user_id: ユーザーID（外部キー、User テーブルを参照）
author_id: 著者ID（外部キー、Author テーブルを参照）
comment: コメント（文字列、NULL許容）

・CommentToArticle テーブル
user_id: ユーザーID（外部キー、User テーブルを参照）
article_id: 記事ID（外部キー、Article テーブルを参照）
comment: コメント（文字列、NULL許容）

多対多関係の中間テーブル
・UserとAuthorの多対多関係
中間テーブル（例: user_author）には user_id と author_id を外部キーとして含めます。
・UserとArticleの多対多関係
中間テーブル（例: user_article）には user_id と article_id を外部キーとして含めます。